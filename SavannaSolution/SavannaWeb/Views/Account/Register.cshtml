@model SavannaWeb.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<style> 
    html, body { 
        height: 100%; 
        margin: 0;
        background-color: white;
        color: black;
        overflow-x: hidden;
        overflow-y: auto;
    } 
 
    .vh-100 { 
        min-height: 100vh;
        display: flex; 
        align-items: center; 
        justify-content: center; 
    } 
 
    .card { 
        background-color: white;
        color: black;
        width: 100%; 
        max-width: 500px;
        margin: 20px auto;
        padding: 20px; 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        border-radius: 10px;
        border: 1px solid #ccc;
    } 

    .form-label,
    .form-control,
    a {
        color: black !important;
    }

    .btn {
        color: white;
        background-color: black;
        border-color: black;
    }

    .btn:hover {
        background-color: #333;
        border-color: #333;
    }

</style> 
 
<section class="d-flex justify-content-center align-items-center mt-5"> 
    <div class="container h-100Z"> 
        <div class="row justify-content-center"> 
            <div class="col-12 col-md-8 col-lg-6 col-xl-5"> 
                <div class="card"> 
                    <div class="card-body text-center"> 
                        <div class="mb-md-4 mt-md-3 pb-3"> 
                            <h2 class="fw-bold mb-2 text-uppercase">Register</h2> 
                            <p>Please fill in the details to create an account!</p>
                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) 
                            { 
                                @Html.AntiForgeryToken() 
 
                                <div class="form-outline mb-3"> 
                                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control form-control-lg", placeholder = "Username", maxlength = "20", id = "Username" }) 
                                    @Html.LabelFor(m => m.Username, "Username:", new { @class = "form-label mt-1" }) 
                                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-warning fw-bold" }) 
                                </div> 
                                <div class="form-outline mb-3"> 
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", placeholder = "Email" }) 
                                    @Html.LabelFor(m => m.Email, "Email:", new { @class = "form-label  mt-1" }) 
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-warning fw-bold" }) 
                                </div> 
                                <div class="form-outline mb-3"> 
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "Password" }) 
                                    @Html.LabelFor(m => m.Password, "Password:", new { @class = "form-label  mt-1" }) 
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-warning fw-bold" }) 
                                </div> 
                                <div class="form-outline mb-3">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-lg", placeholder = "Confirm Password" })
                                    @Html.LabelFor(m => m.ConfirmPassword, "Confirm Password:", new { @class = "form-label  mt-1" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-warning fw-bold" })
                                </div>
                                <div class="form-outline mb-3">
                                    @Html.DropDownListFor(m => m.SecurityQuestion, (IEnumerable<SelectListItem>)ViewBag.SecurityQuestions, "Select a question", new { @class = "form-control form-control-lg  mt-1" })
                                    @Html.LabelFor(m => m.SecurityQuestion, "Security Question", new { @class = "form-label" })
                                    @Html.ValidationMessageFor(m => m.SecurityQuestion, "", new { @class = "text-warning fw-bold" })
                                </div>
                                <div class="form-outline mb-3">
                                    @Html.TextBoxFor(m => m.AnswerToSecurityQuestion, new { @class = "form-control form-control-lg", placeholder = "Answer to the Security Question" })
                                    @Html.LabelFor(m => m.AnswerToSecurityQuestion, "Security Answer:", new { @class = "form-label  mt-1" })
                                    @Html.ValidationMessageFor(m => m.AnswerToSecurityQuestion, "", new { @class = "text-warning fw-bold" })
                                </div>

                                @if (ViewData.ModelState.ContainsKey(string.Empty) && ViewData.ModelState[string.Empty].Errors.Count > 0)
                                {
                                    <div class="text-danger">
                                        @Html.ValidationSummary(false, "", new { @class = "text-dark fw-bold" })
                                    </div>
                                }

                                <button type="submit" class="btn btn-lg px-4">Create Account</button>
                            }
                            <div>
                                <p class="mb-2" style="padding-top:20px">
                                    Already have an account?
                                    @Html.ActionLink("Login", "Login", "Account", new { @style = "color: black; font-weight: bold;" })
                                </p>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



